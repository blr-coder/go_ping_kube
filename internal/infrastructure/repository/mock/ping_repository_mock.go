// Code generated by MockGen. DO NOT EDIT.
// Source: go_ping_kube/internal/infrastructure/repository (interfaces: IPingRepository)

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	models "go_ping_kube/internal/domain/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockIPingRepository is a mock of IPingRepository interface.
type MockIPingRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIPingRepositoryMockRecorder
}

// MockIPingRepositoryMockRecorder is the mock recorder for MockIPingRepository.
type MockIPingRepositoryMockRecorder struct {
	mock *MockIPingRepository
}

// NewMockIPingRepository creates a new mock instance.
func NewMockIPingRepository(ctrl *gomock.Controller) *MockIPingRepository {
	mock := &MockIPingRepository{ctrl: ctrl}
	mock.recorder = &MockIPingRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPingRepository) EXPECT() *MockIPingRepositoryMockRecorder {
	return m.recorder
}

// All mocks base method.
func (m *MockIPingRepository) All(arg0 context.Context) ([]*models.PingData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "All", arg0)
	ret0, _ := ret[0].([]*models.PingData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// All indicates an expected call of All.
func (mr *MockIPingRepositoryMockRecorder) All(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "All", reflect.TypeOf((*MockIPingRepository)(nil).All), arg0)
}

// Get mocks base method.
func (m *MockIPingRepository) Get(arg0 context.Context, arg1 uuid.UUID) (*models.PingData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*models.PingData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIPingRepositoryMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIPingRepository)(nil).Get), arg0, arg1)
}

// Save mocks base method.
func (m *MockIPingRepository) Save(arg0 context.Context, arg1 *models.PingData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockIPingRepositoryMockRecorder) Save(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockIPingRepository)(nil).Save), arg0, arg1)
}

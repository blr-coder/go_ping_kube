// Code generated by MockGen. DO NOT EDIT.
// Source: go_ping_kube/internal/domain/services (interfaces: IPingService)

// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	models "go_ping_kube/internal/domain/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockIPingService is a mock of IPingService interface.
type MockIPingService struct {
	ctrl     *gomock.Controller
	recorder *MockIPingServiceMockRecorder
}

// MockIPingServiceMockRecorder is the mock recorder for MockIPingService.
type MockIPingServiceMockRecorder struct {
	mock *MockIPingService
}

// NewMockIPingService creates a new mock instance.
func NewMockIPingService(ctrl *gomock.Controller) *MockIPingService {
	mock := &MockIPingService{ctrl: ctrl}
	mock.recorder = &MockIPingServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPingService) EXPECT() *MockIPingServiceMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockIPingService) Add(arg0 context.Context, arg1 *models.CreatePingData) (*models.PingData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", arg0, arg1)
	ret0, _ := ret[0].(*models.PingData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add.
func (mr *MockIPingServiceMockRecorder) Add(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockIPingService)(nil).Add), arg0, arg1)
}

// All mocks base method.
func (m *MockIPingService) All(arg0 context.Context) ([]*models.PingData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "All", arg0)
	ret0, _ := ret[0].([]*models.PingData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// All indicates an expected call of All.
func (mr *MockIPingServiceMockRecorder) All(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "All", reflect.TypeOf((*MockIPingService)(nil).All), arg0)
}

// Get mocks base method.
func (m *MockIPingService) Get(arg0 context.Context, arg1 uuid.UUID) (*models.PingData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*models.PingData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIPingServiceMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIPingService)(nil).Get), arg0, arg1)
}
